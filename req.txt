
Понял вас. Попробуем еще раз, используя промисы:

HTML:
```html
<button ng-click="runFunctions()">Нажми меня</button>
```

JavaScript (AngularJS controller):
```javascript
$scope.runFunctions = function() {
    $scope.firstFunction().then(function() {
        $scope.secondFunction();
    });
};

$scope.firstFunction = function() {
    return $q(function(resolve, reject) {
        // Ваш код для первой функции здесь
        // Когда первая функция завершает свое выполнение, вызываем resolve()
        resolve();
    });
};

$scope.secondFunction = function() {
    // Ваш код для второй функции здесь
};
```

В этом примере `firstFunction` возвращает промис, который разрешается, когда первая функция завершает свое выполнение. Затем `runFunctions` вызывает `secondFunction` после того, как `firstFunction` завершит выполнение. Пожалуйста, убедитесь, что вы правильно настроили `$q` в вашем контроллере AngularJS.
