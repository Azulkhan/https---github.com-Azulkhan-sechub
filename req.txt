В AngularJS, для выполнения одной функции после завершения другой, можно воспользоваться обещаниями (promises) или цепочкой функций с использованием `$q` сервиса. Вот пример с использованием `$q` для цепочки функций:

```javascript
app.controller('MyController', function($scope, $q) {
  function firstFunction() {
    var deferred = $q.defer();

    // Асинхронная операция
    setTimeout(function() {
      console.log('First function executed');
      deferred.resolve('First function result');
    }, 1000);

    return deferred.promise;
  }

  function secondFunction(result) {
    console.log('Second function executed with result:', result);
  }

  // Запуск первой функции и ожидание её завершения
  firstFunction().then(function(result) {
    // Запуск второй функции после завершения первой
    secondFunction(result);
  });
});
```

В этом примере:

1. `firstFunction` возвращает обещание (promise), которое разрешается после выполнения асинхронной операции (в данном случае через `setTimeout`).
2. В `then` обработчике обещания `firstFunction` вызывается `secondFunction`, которая принимает результат первой функции в качестве параметра.

Таким образом, `secondFunction` выполнится только после завершения `firstFunction`.