В Angular можно создать выпадающий список и управлять его значением с помощью ngModel. Вот пример, как это можно сделать:

HTML: Создайте выпадающий список с помощью <select> и ngModel для связывания значения.
html
Копировать код
<select [(ngModel)]="perpage" (ngModelChange)="onPerPageChange($event)">
  <option *ngFor="let option of options" [value]="option">{{ option }}</option>
  <option value="b">b</option>
</select>
TypeScript: Определите переменные и методы в вашем компоненте.
typescript
Копировать код
import { Component } from '@angular/core';

@Component({
  selector: 'app-my-component',
  templateUrl: './my-component.component.html',
  styleUrls: ['./my-component.component.css']
})
export class MyComponent {
  perpage: number | string = 15;  // Значение по умолчанию
  const_perpage: number = 15;  // Константа по умолчанию
  options: number[] = [15, 30, 45, 60, 75, 90];  // Опции для выпадающего списка

  constructor() {
    // Инициализация или другие действия при создании компонента
  }

  onPerPageChange(value: number | string) {
    // Логика при изменении значения
    if (value === 'b') {
      this.perpage = this.const_perpage;  // Возврат к значению по умолчанию
    } else {
      this.perpage = Number(value);  // Присваиваем выбранное значение
    }
  }
}
Объяснение:

В HTML-шаблоне создается выпадающий список с опциями и связывается с переменной perpage с помощью ngModel.
При изменении значения в списке вызывается метод onPerPageChange, который обновляет значение переменной perpage. Если выбрано значение "b", оно сбрасывает значение на const_perpage.
Таким образом, при изменении значения в выпадающем списке переменная perpage будет обновляться, и при выборе "b" возвращаться к значению по умолчанию.
