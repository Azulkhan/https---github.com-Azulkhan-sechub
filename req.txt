
Чтобы убрать последнее вхождение определенного символа из строки в Lua, например, последнее двоеточие (`:`), можно использовать следующий подход. Мы найдем позицию последнего вхождения символа, разобьем строку на две части (до символа и после), и затем соединим эти части обратно без этого символа.

Вот пример функции, которая делает именно это:

```lua
function removeLastOccurrence(str, charToRemove)
    -- Находим последнее вхождение символа
    local lastOccurrence = str:match(".*()" .. charToRemove)
    
    if lastOccurrence then
        -- Если символ найден, разбиваем строку и удаляем символ
        local part1 = str:sub(1, lastOccurrence - 1)
        local part2 = str:sub(lastOccurrence + 1)
        -- Возвращаем измененную строку
        return part1 .. part2
    else
        -- Если символ не найден, возвращаем исходную строку
        return str
    end
end

local myString = "Это: пример: строки с: двоеточиями:"
local modifiedString = removeLastOccurrence(myString, ":")
print(modifiedString)  -- Вывод: Это: пример: строки с: двоеточиями
```

В этой функции мы используем метод `string.match` для поиска последнего вхождения символа, переданного в функцию. Затем, если символ найден, мы разбиваем строку на две части: до найденного символа и после него. После этого мы соединяем эти части обратно, исключая символ. Если символ не найден, функция просто возвращает исходную строку.

Этот метод работает для любого символа или даже последовательности символов, которую вы хотите удалить из строки.
