 .Понял вас. Вам нужно, чтобы сразу после генерации каждой ссылки на файл происходило его скачивание. Давайте создадим функцию, которая будет вызывать бизнес-процесс и скачивать файлы один за другим, без задержек между скачиваниями.

### Пример реализации

Предположим, у вас есть бизнес-процесс, который генерирует ссылки на файлы, и вам нужно сразу скачивать эти файлы. Вот как это можно сделать:

```typescript
async onButtonClick() {
  console.log('Кнопка нажата, начинаем выполнение бизнес-процесса...');

  try {
    // Количество файлов, которые нужно сгенерировать
    const numberOfFiles = 9; 
    for (let i = 1; i <= numberOfFiles; i++) {
      const fileUrl = await this.generateFile(i); // Генерируем файл
      await this.downloadFile(fileUrl); // Скачиваем файл
    }
    console.log('Все файлы успешно скачаны');
  } catch (error) {
    console.error('Ошибка:', error);
  }
}

// Имитация бизнес-процесса, который генерирует файл
generateFile(fileNumber: number): Promise<string> {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      const success = true; // Имитация успешного выполнения процесса
      if (success) {
        const fileUrl = `https://example.com/generated-file${fileNumber}.pdf`; // Ссылка на сгенерированный файл
        console.log(`Файл ${fileNumber} сгенерирован: ${fileUrl}`);
        resolve(fileUrl); // Возвращаем URL файла
      } else {
        reject('Ошибка генерации файла');
      }
    }, 1000); // Имитация задержки в 1 секунду
  });
}

downloadFile(url: string): Promise<void> {
  return new Promise((resolve) => {
    const a = document.createElement('a');
    a.href = url;
    a.download = ''; // Указывает, что файл должен быть загружен
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a); // Удаляем элемент после клика
    resolve(); // Завершение промиса для текущего файла
  });
}
```

### Объяснение:

1. **Функция `onButtonClick`:**
   - При нажатии кнопки начинается выполнение бизнес-процесса.
   - Цикл `for` запускает `generateFile(i)` для каждого файла, где `i` — номер файла.
   - После генерации файла вызывается `downloadFile(fileUrl)` для его скачивания.

2. **Функция `generateFile`:**
   - Имитация бизнес-процесса с использованием `setTimeout`. 
   - Генерирует URL для каждого файла и возвращает его. В реальном коде здесь будет ваш логика для получения ссылки на файл.

3. **Функция `downloadFile`:**
   - Создает элемент `<a>`, инициирует скачивание файла и удаляет элемент после завершения.

### Итог

Теперь при нажатии кнопки будут скачиваться все файлы один за другим без задержки. Как только каждый файл будет сгенерирован, он будет автоматически скачиваться. Если это не совсем то, что вам нужно, пожалуйста, дайте мне больше информации, и я помогу адаптировать код под ваши требования!