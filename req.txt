Чтобы отобразить сообщение "Данных нет" в случае, если массив `queryRes` пустой, и чтобы `ngFor` работал, когда массив не пуст, вы можете использовать директиву Angular `*ngIf` вместе с `*ngFor`.

Вот пример, как это можно сделать:

```html
<table>
  <tr *ngIf="queryRes.length === 0">
    <td colspan="number_of_columns">Данных нет</td>
  </tr>
  <tr *ngFor="let row of queryRes">
    <!-- Строки вашей таблицы с данными -->
    <td>{{ row.field1 }}</td>
    <td>{{ row.field2 }}</td>
    <!-- Другие поля -->
  </tr>
</table>
```

В этом примере, если массив `queryRes` пустой (т.е. `queryRes.length === 0`), будет отображена строка с сообщением "Данных нет". Если массив не пустой, строки с данными будут отображены с помощью `ngFor`.

Если вы хотите иметь более точный контроль и избежать отображения пустой строки в таблице, можно использовать контейнеры, такие как `<ng-container>`:

```html
<table>
  <ng-container *ngIf="queryRes.length > 0; else noData">
    <tr *ngFor="let row of queryRes">
      <!-- Строки вашей таблицы с данными -->
      <td>{{ row.field1 }}</td>
      <td>{{ row.field2 }}</td>
      <!-- Другие поля -->
    </tr>
  </ng-container>
  <ng-template #noData>
    <tr>
      <td colspan="number_of_columns">Данных нет</td>
    </tr>
  </ng-template>
</table>
```

В этом примере, если `queryRes` пустой, будет использован шаблон `noData`, который отображает сообщение "Данных нет". Если `queryRes` не пустой, `ngFor` будет отображать строки с данными.