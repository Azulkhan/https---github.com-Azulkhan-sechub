Для создания Excel-файла с заданным форматированием, включая серый фон для заголовков, жирный шрифт, шрифт Times New Roman размером 10 и черные границы для всех ячеек с данными, можно использовать библиотеку `xlsx` с настройками стилей.

Вот пример кода:

```javascript
// Подключаем библиотеку xlsx
const XLSX = require('xlsx');

// Ваши заголовки
let xlsHeader = [
  "Заголовок 1", "Заголовок 2", "Заголовок 3", "Заголовок 4", "Заголовок 5", "Заголовок 6", "Заголовок 7", 
  "Заголовок 8", "Заголовок 9", "Заголовок 10", "Заголовок 11", 
  "Заголовок 12", "Заголовок 13", "Заголовок 14", 
  "Заголовок 15", "Заголовок 16", "Заголовок 17", 
  "Заголовок 18", "Заголовок 19", 
  "Заголовок 20", 
  "Заголовок 21", "Заголовок 22"
];

// Данные для Excel (пример данных)
let data = [
  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22],
  [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]
];

// Создаем массив для хранения данных в формате xlsx
let createxlsxformat = [];

// Создаем объединенные заголовки
let mergedHeader = [
  { v: "Группа 1", s: { alignment: { horizontal: "center", vertical: "center" }, font: { bold: true }, fill: { fgColor: { rgb: "D9D9D9" } } } }, null, null, null, null, null, null, null, null, null, null,
  { v: "Группа 2", s: { alignment: { horizontal: "center", vertical: "center" }, font: { bold: true }, fill: { fgColor: { rgb: "D9D9D9" } } } }, null, null,
  { v: "Группа 3", s: { alignment: { horizontal: "center", vertical: "center" }, font: { bold: true }, fill: { fgColor: { rgb: "D9D9D9" } } } }, null, null,
  { v: "Группа 4", s: { alignment: { horizontal: "center", vertical: "center" }, font: { bold: true }, fill: { fgColor: { rgb: "D9D9D9" } } } }, null,
  { v: "Группа 5", s: { alignment: { horizontal: "center", vertical: "center" }, font: { bold: true }, fill: { fgColor: { rgb: "D9D9D9" } } } },
  null, null
];

// Добавляем заголовки и данные в createxlsxformat
createxlsxformat.push(mergedHeader); // Добавляем объединенные заголовки
createxlsxformat.push(xlsHeader); // Добавляем основные заголовки
data.forEach(row => createxlsxformat.push(row));

// Создаем рабочий лист из массива данных
let ws = XLSX.utils.aoa_to_sheet(createxlsxformat);

// Определяем стили
const defaultFont = { name: "Times New Roman", sz: 10 };
const headerStyle = {
  font: { ...defaultFont, bold: true },
  fill: { fgColor: { rgb: "D9D9D9" } },
  border: {
    top: { style: "thin", color: { rgb: "000000" } },
    bottom: { style: "thin", color: { rgb: "000000" } },
    left: { style: "thin", color: { rgb: "000000" } },
    right: { style: "thin", color: { rgb: "000000" } }
  },
  alignment: { horizontal: "center", vertical: "center" }
};
const cellStyle = {
  font: defaultFont,
  border: {
    top: { style: "thin", color: { rgb: "000000" } },
    bottom: { style: "thin", color: { rgb: "000000" } },
    left: { style: "thin", color: { rgb: "000000" } },
    right: { style: "thin", color: { rgb: "000000" } }
  }
};

// Применяем стили к заголовкам
for (let c = 0; c < xlsHeader.length; c++) {
  const cellAddress = XLSX.utils.encode_cell({ r: 1, c: c });
  if (!ws[cellAddress]) ws[cellAddress] = {};
  ws[cellAddress].s = headerStyle;
}

// Применяем стили к данным
for (let r = 2; r < createxlsxformat.length; r++) {
  for (let c = 0; c < createxlsxformat[r].length; c++) {
    const cellAddress = XLSX.utils.encode_cell({ r: r, c: c });
    if (!ws[cellAddress]) ws[cellAddress] = {};
    ws[cellAddress].s = cellStyle;
  }
}

// Применяем серый фон к последнему полю
for (let r = 2; r < createxlsxformat.length; r++) {
  const lastCellAddress = XLSX.utils.encode_cell({ r: r, c: createxlsxformat[r].length - 1 });
  if (!ws[lastCellAddress]) ws[lastCellAddress] = {};
  ws[lastCellAddress].s = { ...cellStyle, fill: { fgColor: { rgb: "D9D9D9" } } };
}

// Объединяем ячейки для заголовков
ws['!merges'] = [
  { s: { r: 0, c: 0 }, e: { r: 0, c: 10 } },  // Объединение ячеек "Группа 1"
  { s: { r: 0, c: 11 }, e: { r: 0, c: 13 } }, // Объединение ячеек "Группа 2"
  { s: { r: 0, c: 14 }, e: { r: 0, c: 16 } }, // Объединение ячеек "Группа 3"
  { s: { r: 0, c: 17 }, e: { r: 0, c: 18 } }, // Объединение ячеек "Группа 4"
  { s: { r: 0, c: 19 }, e: { r: 0, c: 19 } }  // Объединение ячеек "Группа 5"
];

// Создаем новую книгу и добавляем в нее лист
let wb = XLSX.utils.book_new();
XLSX.utils.book_append_sheet(wb, ws, "Sheet1");

// Сохраняем книгу в файл
XLSX.writeFile(wb, 'example.xlsx');
```

Этот код:

1. **Определяет заголовки и данные**.
2. **Создает объединенные заголовки с выравниванием по центру и серым фоном**.
3. **Добавляет заголовки и данные в массив `createxlsxformat`**.
4. **Создает рабочий лист из массива данных**.
5. **Определяет стили для заголовков и ячеек с данными**.
6. **Применяет стили к заголовкам и ячейкам с данными**.
7. **Применяет серый фон к последнему полю в каждой строке данных**.
8. **Объединяет ячейки для заголовков**.
9. **Создает книгу и добавляет в нее рабочий лист**.
10. **Сохраняет книгу в файл `example.xlsx`**.

Таким образом, заголовки будут выровнены по центру, иметь серый фон и жирный шрифт, шрифт всего документа будет Times New Roman размером 10, все ячейки с данными будут иметь черные границы, и последнее поле будет с серым фоном.