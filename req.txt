Кажется, что вы имели в виду метод `fetch` в JavaScript, который используется для отправки запросов HTTP. Этот метод асинхронный и возвращает объект `Promise`, который разрешается с объектом `Response`, представляющим ответ на запрос.

Вот пример использования метода `fetch`:

```javascript
fetch('https://api.example.com/data')
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json();
  })
  .then(data => {
    console.log('Received data:', data);
  })
  .catch(error => {
    console.error('Error fetching data:', error);
  });
```

В этом примере:

- Мы отправляем GET-запрос по адресу `https://api.example.com/data`.
- Метод `fetch` возвращает объект `Promise`, который разрешается с объектом `Response`.
- Мы проверяем, что ответ `response` от сервера успешный с помощью `response.ok`.
- Если ответ успешный, мы вызываем метод `response.json()`, который также возвращает `Promise` и разрешается с JSON-парсированными данными.
- В конце мы обрабатываем полученные данные в блоке `then` и ловим ошибки в блоке `catch`.

Этот метод `fetch` широко используется для обмена данными с сервером в современных веб-приложениях на JavaScript.