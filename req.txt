
Если проблема заключается в том, что второй `ASPxPopupControl` (`pc2`) не появляется при нажатии на стрелку `ASPxComboBox`, находящегося внутри первого `ASPxPopupControl` (`pc1`), возможно, проблема связана с обработчиком событий на клиенте или с конфигурацией `ASPxComboBox`.

Чтобы убедиться, что `pc2` открывается при нажатии на стрелку `ASPxComboBox`, вам нужно правильно настроить клиентский обработчик события для `ASPxComboBox`. Например, вы можете использовать событие `DropDown` (событие, происходящее при попытке открыть список элементов `ComboBox`), чтобы открыть `pc2`.

Вот как это можно сделать:

### Шаг 1: Настройка ASPxComboBox

Убедитесь, что у вашего `ASPxComboBox` есть обработчик для события `ClientSideEvents-DropDown`, который будет вызывать открытие `pc2`.

```aspx
<dx:ASPxComboBox ID="ComboBox1" runat="server" ClientInstanceName="cb1">
    <ClientSideEvents DropDown="function(s, e) { pc2.Show(); }" />
</dx:ASPxComboBox>
```

### Шаг 2: Убедитесь, что pc2 готов к отображению

Проверьте, что `pc2` настроен правильно и готов к отображению. Убедитесь, что он не имеет свойства `ShowOnPageLoad` установленного в `false`, если вы хотите управлять его видимостью исключительно через код.

```aspx
<dx:ASPxPopupControl ID="PopupControl2" runat="server" ClientInstanceName="pc2" ShowOnPageLoad="false">
    <!-- Контент pc2 -->
</dx:ASPxPopupControl>
```

### Возможные проблемы и их решение

- **Взаимодействие событий**: Убедитесь, что событие `DropDown` `ASPxComboBox` не блокируется или не переопределяется другими скриптами или обработчиками событий.
- **Зависимости скриптов**: Проверьте, что все необходимые скрипты загружены корректно, и нет ошибок JavaScript в консоли браузера, которые могут мешать исполнению вашего кода.
- **Использование ClientInstanceName**: Проверьте, что свойство `ClientInstanceName` установлено и правильно используется в вашем скрипте для обоих `ASPxPopupControl`.

Если предложенные шаги не решают проблему, возможно, потребуется более детальный анализ кода и конфигурации на вашей стороне, включая проверку наличия JavaScript ошибок в консоли браузера и убедиться, что нет конфликтов с другими клиентскими скриптами на странице.
