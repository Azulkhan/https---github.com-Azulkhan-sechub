<dx:ASPxMenu ID="ASPxMenu1" runat="server" ItemLinkMode="ItemClick" AutoPostBack="false" 
    ClientInstanceName="menu" onitemclick="ASPxMenu1_ItemClick">
</dx:ASPxMenu>


protected void Page_Load(object sender, EventArgs e)
{
    if (!IsPostBack)
    {
        InitializeMenu();
    }
}

private void InitializeMenu()
{
    DataSet ds = GetMenuDataSet();
    DataTable dt = ds.Tables[0];

    foreach (DataRow row in dt.Rows)
    {
        if (row.IsNull("ParentID") || Convert.ToInt32(row["ParentID"]) == 0)
        {
            DevExpress.Web.MenuItem menuItem = new DevExpress.Web.MenuItem();
            menuItem.Text = row["Name"].ToString();
            menuItem.Name = row["ID"].ToString(); // Уникальный идентификатор
            ASPxMenu1.Items.Add(menuItem);
            AddChildItems(menuItem, dt);
        }
    }
}

private void AddChildItems(DevExpress.Web.MenuItem parentItem, DataTable dt)
{
    foreach (DataRow row in dt.Rows)
    {
        if (!row.IsNull("ParentID") && Convert.ToInt32(row["ParentID"]) == Convert.ToInt32(parentItem.Name))
        {
            DevExpress.Web.MenuItem childItem = new DevExpress.Web.MenuItem();
            childItem.Text = row["Name"].ToString();
            childItem.Name = row["ID"].ToString();
            parentItem.Items.Add(childItem);
            AddChildItems(childItem, dt); // Рекурсивно добавляем подменю
        }
    }
}

protected void ASPxMenu1_ItemClick(object source, DevExpress.Web.MenuItemEventArgs e)
{
    // Обработка выбора элемента меню
    // Вы можете здесь использовать e.Item.Name для дальнейших действий
    string selectedValue = e.Item.Name;
    // Тут ваш код для использования selectedValue
}
