В AngularJS вы можете использовать сервис `$http` для загрузки XML данных и затем преобразовать их в JSON формат, чтобы обрабатывать их в вашем приложении. Вот пример:

```javascript
app.controller('MainController', function($scope, $http, $sce) {
    $http.get('data.xml', { responseType: 'text' })
        .then(function(response) {
            // Преобразование XML в JSON
            var xml = response.data;
            var parser = new DOMParser();
            var xmlDoc = parser.parseFromString(xml, "text/xml");
            var json = xmlToJson(xmlDoc);
            
            // Присвоение данных переменной $scope
            $scope.xmlData = json;
        });
});

function xmlToJson(xml) {
    var obj = {};

    if (xml.nodeType == 1) {
        if (xml.attributes.length > 0) {
            obj["@attributes"] = {};
            for (var j = 0; j < xml.attributes.length; j++) {
                var attribute = xml.attributes.item(j);
                obj["@attributes"][attribute.nodeName] = attribute.nodeValue;
            }
        }
    } else if (xml.nodeType == 3) {
        obj = xml.nodeValue;
    }

    if (xml.hasChildNodes()) {
        for (var i = 0; i < xml.childNodes.length; i++) {
            var item = xml.childNodes.item(i);
            var nodeName = item.nodeName;
            if (typeof(obj[nodeName]) == "undefined") {
                obj[nodeName] = xmlToJson(item);
            } else {
                if (typeof(obj[nodeName].push) == "undefined") {
                    var old = obj[nodeName];
                    obj[nodeName] = [];
                    obj[nodeName].push(old);
                }
                obj[nodeName].push(xmlToJson(item));
            }
        }
    }
    return obj;
}
```

Затем вы можете использовать `xmlData` в вашем HTML-шаблоне, например:

```html
<div ng-controller="MainController">
    <pre>{{ xmlData | json }}</pre>
</div>
```

Это примерный код. Убедитесь, что адаптируете его под свои потребности и проверяйте его работоспособность.