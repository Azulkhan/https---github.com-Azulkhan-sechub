Можно использовать конструкцию `COALESCE`, чтобы заменить пустые или `NULL` значения на что-то другое, например, на строку `'нул'`. Также, чтобы избежать конкатенации, если `col1` пустой, можно использовать условие. Пример запроса:

```sql
SELECT CASE 
           WHEN col1 IS NULL OR col1 = '' THEN 'нул' 
           ELSE col1 || '/' 
       END 
FROM cols;
```

Здесь, если `col1` пустой или равен `NULL`, выводится строка `'нул'`. В остальных случаях к значению `col1` добавляется `


Для предотвращения двойного слэша, если `col2` пустой, можно также использовать `CASE` или `COALESCE`, чтобы управлять конкатенацией. Пример запроса:

```sql
SELECT CASE 
           WHEN col1 IS NOT NULL AND col1 != '' AND (col2 IS NULL OR col2 = '') 
           THEN col1 || '/' 
           ELSE col1 || '/' || COALESCE(col2, '') || '/' 
       END 
FROM cols;
```

Этот запрос работает следующим образом:
- Если `col1` не пустой, а `col2` пустой или `NULL`, выводится только `col1` со слэшем (`col1/`).
- Если оба столбца заполнены, конкатенация произойдет как обычно: `col1/col2/`.
/`.