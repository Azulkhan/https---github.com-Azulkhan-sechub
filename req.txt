
Конечно, вот пример с двумя простыми функциями на AngularJS:

```javascript
angular.module('myApp', [])
  .controller('MyController', function($scope, $q) {
    $scope.executeFunctions = function() {
      $scope.firstFunction().then(function(result) {
        // Первая функция выполнена успешно, можно выполнить вторую
        return $scope.secondFunction(result);
      }).then(function(finalResult) {
        // Вторая функция выполнена успешно
        console.log("Результат второй функции: ", finalResult);
      }).catch(function(error) {
        // Обработка ошибок
        console.error("Произошла ошибка: ", error);
      });
    };

    $scope.firstFunction = function() {
      var deferred = $q.defer();
      // Логика первой функции
      var result = "Результат первой функции";
      deferred.resolve(result);
      return deferred.promise;
    };

    $scope.secondFunction = function(data) {
      var deferred = $q.defer();
      // Логика второй функции, использующей данные из первой функции
      var finalResult = "Результат второй функции, использующей данные: " + data;
      deferred.resolve(finalResult);
      return deferred.promise;
    };
  });
```

Этот пример содержит контроллер AngularJS `MyController`, который определяет две функции `firstFunction()` и `secondFunction()`. Метод `executeFunctions()` вызывает эти две функции последовательно с использованием промисов для управления потоком выполнения.
