
Для реализации многоуровневого иерархического списка типа dropdownlist на веб-странице с использованием библиотеки DevExpress в версии 11.1.6, вы можете воспользоваться элементом управления `ASPxComboBox`. Вот пример, как это можно сделать на ASP.NET странице с использованием C#:

```csharp
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="YourPage.aspx.cs" Inherits="YourNamespace.YourPage" %>
<%@ Register Assembly="DevExpress.Web.v11.1, Version=11.1.6.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a"
    Namespace="DevExpress.Web.ASPxEditors" TagPrefix="dx" %>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
        <dx:ASPxComboBox ID="multiLevelComboBox" runat="server" DropDownStyle="DropDown" DropDownWidth="300px"
            EnableSynchronization="True" IncrementalFilteringMode="Contains" OnSelectedIndexChanged="multiLevelComboBox_SelectedIndexChanged">
        </dx:ASPxComboBox>
    </form>
</body>
</html>
```

В коде вашей страницы C# вы можете добавить логику для заполнения и обработки выбора элементов в ASPxComboBox:

```csharp
using System;
using DevExpress.Web.ASPxEditors;
using System.Collections.Generic;
using System.Web.UI.WebControls;

namespace YourNamespace
{
    public partial class YourPage : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                // Заполнение данными при первой загрузке страницы
                PopulateMultiLevelComboBox();
            }
        }

        protected void PopulateMultiLevelComboBox()
        {
            // Здесь вы можете получить данные из вашей базы данных или другого источника
            // Просто для примера, я добавлю статические данные
            List<ListItem> items = new List<ListItem>();
            items.Add(new ListItem("Root", "1"));
            items.Add(new ListItem("Child 1", "2"));
            items.Add(new ListItem("Child 2", "3"));
            items.Add(new ListItem("Sub Child 1", "4"));
            items.Add(new ListItem("Sub Child 2", "5"));

            // Заполнение ASPxComboBox данными
            foreach (ListItem item in items)
            {
                multiLevelComboBox.Items.Add(item);
            }
        }

        protected void multiLevelComboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            // Обработка выбора элемента
            string selectedValue = multiLevelComboBox.SelectedItem.Value;
            string selectedText = multiLevelComboBox.SelectedItem.Text;

            // Дополнительная логика в зависимости от выбранного элемента
            // Например, обновление других элементов на странице или перенаправление пользователя
            // Response.Redirect("YourPage.aspx?selectedValue=" + selectedValue);
        }
    }
}
```

Это пример того, как вы можете использовать ASPxComboBox для создания многоуровневого иерархического списка на веб-странице с использованием DevExpress в версии 11.1.6. Вы можете адаптировать этот пример под ваши конкретные потребности и источники данных.
