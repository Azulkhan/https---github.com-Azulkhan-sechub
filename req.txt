
Понял. Если у вас нет библиотеки `openssl` для Lua, можно воспользоваться другим способом, используя стандартные средства Lua. Вот пример простого способа извлечения данных из открытого ключа в формате PEM:

```lua
-- Ваш открытый ключ
local public_key = [[
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr3Y1lvmYK54/n0lfodlE
GKnKYp1Z8zkgTh5VO/L66WFuU0xxl8rWxeBoHZzAaZXhfMCetZ3a69eFyTBeuBy0
qThpXQk+6QGnVoKciKydW6vVGpo/rdX2y9uWlxX1SRE/nzZnWwNlzbDDMSv7PS82
EPIrEuk8hHwQn8hF3x/6hhUToGClABISiShJ7CpNnKuMjwX+gkzfAg1Asqy+x3xt
Q2bfz7zN4WrgKzve8sDfnE/PS0SeOqPvKrxJL8fwWm1DGX0eK5arMIOhceYOoP2v
xzuy1s6hWJwd7X4Hd4pl3aUj9rCrgX0q9aDf4/1hup4SYrlBbHMGt2zdd0wxBxOv
VwIDAQAB
-----END PUBLIC KEY-----
]]

-- Функция для извлечения данных из открытого ключа
local function parse_public_key(public_key)
    local key_data = {}
    for line in public_key:gmatch("[^\n]+") do
        if not line:find("-----") then
            key_data[#key_data + 1] = line
        end
    end
    return table.concat(key_data)
end

-- Извлекаем данные из открытого ключа
local extracted_key = parse_public_key(public_key)
print("Извлеченные данные из открытого ключа:")
print(extracted_key)
```

Этот простой скрипт извлекает данные из открытого ключа PEM, игнорируя заголовки и футер. Результатом будет строка с данными из открытого ключа.
