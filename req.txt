Понял вас. Давайте включим объединенные заголовки прямо в `let xlsHeader`. 

```javascript
// Подключаем библиотеку xlsx
const XLSX = require('xlsx');

// Заголовки с объединенными ячейками
let xlsHeader = [
  ["Общие данные", null, "Данные ПО факту", null],  // Первая строка заголовков
  ["Номер", "Класс", "Номер", "Класс"]             // Вторая строка заголовков
];

// Создаем массив для хранения данных в формате xlsx (добавляем данные, если есть)
let createxlsxformat = [];
createxlsxformat.push(...xlsHeader);

// Создаем рабочий лист из массива данных
let ws = XLSX.utils.aoa_to_sheet(createxlsxformat);

// Объединяем ячейки для заголовков
ws['!merges'] = [
  { s: { r: 0, c: 0 }, e: { r: 0, c: 1 } },  // Объединение ячеек "Общие данные"
  { s: { r: 0, c: 2 }, e: { r: 0, c: 3 } }   // Объединение ячеек "Данные ПО факту"
];

// Создаем новую книгу и добавляем в нее лист
let wb = XLSX.utils.book_new();
XLSX.utils.book_append_sheet(wb, ws, "Sheet1");

// Сохраняем книгу в файл
XLSX.writeFile(wb, 'example.xlsx');
```

Этот код:

1. **Определяет заголовки с объединенными ячейками**: Включает объединенные заголовки прямо в `xlsHeader`.
2. **Создает рабочий лист**: Использует `XLSX.utils.aoa_to_sheet` для создания рабочего листа.
3. **Объединяет ячейки**: Использует `ws['!merges']` для объединения ячеек.
4. **Создает книгу и добавляет лист**: Создает новую книгу и добавляет рабочий лист.
5. **Сохраняет книгу в файл**: Сохраняет файл с названием `example.xlsx`.

Этот подход создаст Excel файл с заголовками, где первые два столбца будут под "Общие данные", а два последних под "Данные ПО факту".