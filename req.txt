protected void Page_Load(object sender, EventArgs e)
{
    if (!IsPostBack)
    {
        InitializeMenu();
    }
}

private void InitializeMenu()
{
    DataSet ds = GetMenuDataSet(); // Получаем данные
    DataTable dt = ds.Tables[0];

    // Создаем главный пункт меню
    DevExpress.Web.MenuItem mainItem = new DevExpress.Web.MenuItem();
    mainItem.Text = "Основной пункт"; // Текст основного пункта
    ASPxMenu1.Items.Add(mainItem);

    // Добавляем дочерние пункты меню к основному пункту
    foreach (DataRow row in dt.Rows)
    {
        if (row.IsNull("ParentID") || Convert.ToInt32(row["ParentID"]) == 0)
        {
        if (Convert.ToInt32(row["ParentID"]) == MainParentID) // Замените MainParentID на ID основного пункта
        {
            DevExpress.Web.MenuItem childItem = new DevExpress.Web.MenuItem();
            childItem.Text = row["Name"].ToString();
            childItem.Name = row["ID"].ToString(); // Уникальный идентификатор пункта меню
            mainItem.Items.Add(childItem);
            // Если есть подменю, вызываем рекурсивное добавление
            AddChildItems(childItem, dt);
        }
    }
}

private void AddChildItems(DevExpress.Web.MenuItem parentItem, DataTable dt)
{
    foreach (DataRow row in dt.Rows)
    {
        if (Convert.ToInt32(row["ParentID"]) == Convert.ToInt32(parentItem.Name))
        {
            DevExpress.Web.MenuItem childItem = new DevExpress.Web.MenuItem();
            childItem.Text = row["Name"].ToString();
            childItem.Name = row["ID"].ToString();
            parentItem.Items.Add(childItem);
            AddChildItems(childItem, dt); // Рекурсивно добавляем подменю
        }
    }
}

private DataSet GetMenuDataSet()
{
    // Ваш метод для получения данных из базы данных
}
