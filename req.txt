
Если вы хотите использовать `socket.http` в Lua для отправки POST-запроса с телом в формате XML без сторонних библиотек, пример ниже поможет вам начать работу. Помните, что для использования `socket.http` вам нужно установить LuaSocket. Этот пример предполагает, что LuaSocket уже доступен в вашей среде.

```lua
local http = require("socket.http")
local ltn12 = require("ltn12")

-- Указываем URL API
local url = "http://example.com/api"

-- Формируем XML тело запроса
local body = [[
<?xml version="1.0" encoding="UTF-8"?>
<request>
    <data>Ваш XML здесь</data>
</request>
]]

-- Создаем таблицу для сохранения ответа
local response = {}

-- Отправляем POST-запрос
local res, code, response_headers = http.request{
    url = url,
    method = "POST",
    headers = {
        ["Content-Type"] = "text/xml",
        ["Content-Length"] = tostring(#body)
    },
    source = ltn12.source.string(body),
    sink = ltn12.sink.table(response)
}

-- Проверяем статус ответа
if code == 200 then
    print("Успешно отправлено. Ответ:")
    print(table.concat(response))
else
    print("Ошибка при отправке запроса. Код ответа:", code)
end
```

Этот пример отправляет POST-запрос с XML-телом на указанный URL. Запрос формируется с помощью модуля `socket.http` и модуля `ltn12` для работы с потоками. Тело запроса передается через параметр `source`, а ответ сохраняется в таблицу `response` с помощью параметра `sink`. После выполнения запроса вы можете проверить HTTP-код ответа, хранящийся в переменной `code`, и обработать ответ соответствующим образом.

Убедитесь, что ваш сервер поддерживает обработку запросов с XML-телом и что URL, метод, заголовки и тело запроса корректны и соответствуют требованиям вашего API.
