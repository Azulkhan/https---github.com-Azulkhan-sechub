В Angular, самая простая функция может быть написана внутри класса компонента. Например, давайте создадим компонент и добавим в него простую функцию.

### Создание компонента

1. Сначала создадим компонент, если у вас его еще нет. Используем Angular CLI:
   ```bash
   ng generate component my-simple-component
   ```

### Добавление простой функции в компонент

2. Откройте файл компонента `my-simple-component.component.ts` и добавьте туда простую функцию.

```typescript
import { Component } from '@angular/core';

@Component({
  selector: 'app-my-simple-component',
  templateUrl: './my-simple-component.component.html',
  styleUrls: ['./my-simple-component.component.css']
})
export class MySimpleComponent {
  
  // Пример простой функции
  mySimpleFunction(): void {
    console.log('Hello, Angular!');
  }
}
```

### Использование функции в шаблоне компонента

3. Чтобы вызвать эту функцию из шаблона, обновите файл шаблона `my-simple-component.component.html`:

```html
<button (click)="mySimpleFunction()">Click me</button>
```

### Полный пример

#### `my-simple-component.component.ts`
```typescript
import { Component } from '@angular/core';

@Component({
  selector: 'app-my-simple-component',
  templateUrl: './my-simple-component.component.html',
  styleUrls: ['./my-simple-component.component.css']
})
export class MySimpleComponent {
  
  // Пример простой функции
  mySimpleFunction(): void {
    console.log('Hello, Angular!');
  }
}
```

#### `my-simple-component.component.html`
```html
<button (click)="mySimpleFunction()">Click me</button>
```

### Пояснения

- `mySimpleFunction(): void` – это простая функция, которая не принимает параметров и не возвращает значения (тип `void`). Она просто выводит сообщение в консоль.
- `(click)="mySimpleFunction()"` – это синтаксис Angular для привязки события клика на кнопку к функции `mySimpleFunction`.

Когда вы нажмете на кнопку, функция `mySimpleFunction` будет вызвана, и в консоль выведется сообщение "Hello, Angular!".