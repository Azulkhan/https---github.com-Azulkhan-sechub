Для подписи данных в формате "raw" с использованием библиотеки `signxml` в Python, вам потребуется следовать примерно такому подходу:

1. **Установка библиотеки `signxml`:** Убедитесь, что у вас установлена библиотека `signxml`. Вы можете установить её с помощью pip, выполнив команду:

   ```
   pip install signxml
   ```

2. **Подготовка сертификата и закрытого ключа:** У вас должен быть X.509 сертификат и соответствующий закрытый ключ, который будет использоваться для подписи данных.

3. **Пример кода для подписи данных:**

   Вот пример кода, который подписывает данные в формате "raw" с использованием библиотеки `signxml`:

   ```python
   from signxml import XMLSigner, XMLVerifier
   from lxml import etree
   from cryptography.hazmat.backends import default_backend
   from cryptography.hazmat.primitives import hashes
   from cryptography.hazmat.primitives.serialization import load_pem_private_key

   # Путь к вашему закрытому ключу в формате PEM
   private_key_path = 'path/to/your/private_key.pem'

   # Путь к вашему X.509 сертификату в формате PEM
   cert_path = 'path/to/your/certificate.pem'

   # Данные для подписи в формате raw
   raw_data = b'This is the data to sign.'

   # Загрузка закрытого ключа
   with open(private_key_path, 'rb') as key_file:
       private_key = load_pem_private_key(key_file.read(), password=None, backend=default_backend())

   # Создание XMLSigner с использованием закрытого ключа и сертификата
   signer = XMLSigner(key=private_key, cert=open(cert_path).read(), digest_algorithm=hashes.SHA256)

   # Подпись данных
   signed_data = signer.sign(raw_data)

   print(f"Signed data: {signed_data}")
   ```

   В этом примере:
   - Вы загружаете закрытый ключ из файла PEM и X.509 сертификат.
   - Создаёте экземпляр `XMLSigner`, указывая ключ, сертификат и алгоритм хеширования (в примере используется SHA-256).
   - Подписываете данные `raw_data` с помощью метода `sign`.

Этот код подписывает данные в формате "raw". Убедитесь, что ваш закрытый ключ и сертификат соответствуют правильному формату и алгоритму, используемому в вашем контексте.