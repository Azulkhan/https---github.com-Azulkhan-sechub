В Lua можно использовать два вложенных цикла `for`, где во втором цикле данные сохраняются в зависимости от значения из первого цикла с учетом связи через `id`. Вот пример реализации:

```lua
-- Пример данных
local first_list = {
    {id = 1, name = "Первый"},
    {id = 2, name = "Второй"}
}

local second_list = {
    {id = 1, value = "Данные для первого"},
    {id = 1, value = "Еще данные для первого"},
    {id = 2, value = "Данные для второго"}
}

-- Результат
local result = {}

-- Цикл по первому списку
for i, item1 in ipairs(first_list) do
    -- Создаем новый список для каждого элемента из первого списка
    result[item1.id] = {}
    
    -- Цикл по второму списку
    for j, item2 in ipairs(second_list) do
        -- Если id совпадает, добавляем элемент из второго списка в результат
        if item1.id == item2.id then
            table.insert(result[item1.id], item2.value)
        end
    end
end

-- Выводим результат
for id, values in pairs(result) do
    print("ID:", id)
    for k, value in ipairs(values) do
        print("  Значение:", value)
    end
end
```

Этот скрипт создает результат, где данные из второго списка сохраняются для каждого элемента из первого списка, основываясь на связи через `id`.

Если что-то нужно изменить или добавить, дайте знать!